-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.armazem
(
    armazem_id integer NOT NULL DEFAULT nextval('armazem_armazem_id_seq'::regclass),
    nome character varying(100) COLLATE pg_catalog."default",
    endereco character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT armazem_pkey PRIMARY KEY (armazem_id)
);

CREATE TABLE IF NOT EXISTS public.avaliacaoproduto
(
    avaliacao_id integer NOT NULL DEFAULT nextval('avaliacaoproduto_avaliacao_id_seq'::regclass),
    cliente_id integer,
    produto_id integer,
    pontuacao integer,
    comentario text COLLATE pg_catalog."default",
    data_avaliacao date,
    CONSTRAINT avaliacaoproduto_pkey PRIMARY KEY (avaliacao_id)
);

CREATE TABLE IF NOT EXISTS public.campanhaproduto
(
    campanha_id integer NOT NULL,
    produto_id integer NOT NULL,
    CONSTRAINT campanhaproduto_pkey PRIMARY KEY (campanha_id, produto_id)
);

CREATE TABLE IF NOT EXISTS public.campanhapromocional
(
    campanha_id integer NOT NULL DEFAULT nextval('campanhapromocional_campanha_id_seq'::regclass),
    nome character varying(100) COLLATE pg_catalog."default",
    descricao text COLLATE pg_catalog."default",
    data_inicio date,
    data_termino date,
    CONSTRAINT campanhapromocional_pkey PRIMARY KEY (campanha_id)
);

CREATE TABLE IF NOT EXISTS public.categoria
(
    categoria_id integer NOT NULL DEFAULT nextval('categoria_categoria_id_seq'::regclass),
    nome character varying(100) COLLATE pg_catalog."default",
    descricao text COLLATE pg_catalog."default",
    CONSTRAINT categoria_pkey PRIMARY KEY (categoria_id)
);

CREATE TABLE IF NOT EXISTS public.cliente
(
    cliente_id integer NOT NULL DEFAULT nextval('cliente_cliente_id_seq'::regclass),
    nome character varying(100) COLLATE pg_catalog."default",
    endereco character varying(255) COLLATE pg_catalog."default",
    email character varying(50) COLLATE pg_catalog."default",
    telefone character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT cliente_pkey PRIMARY KEY (cliente_id)
);

CREATE TABLE IF NOT EXISTS public.comissao
(
    comissao_id integer NOT NULL DEFAULT nextval('comissao_comissao_id_seq'::regclass),
    valor numeric(10, 2),
    descricao text COLLATE pg_catalog."default",
    vendedor_id integer,
    CONSTRAINT comissao_pkey PRIMARY KEY (comissao_id)
);

CREATE TABLE IF NOT EXISTS public.formapagamento
(
    forma_pagamento_id integer NOT NULL DEFAULT nextval('formapagamento_forma_pagamento_id_seq'::regclass),
    tipo character varying(50) COLLATE pg_catalog."default",
    descricao text COLLATE pg_catalog."default",
    CONSTRAINT formapagamento_pkey PRIMARY KEY (forma_pagamento_id)
);

CREATE TABLE IF NOT EXISTS public.itempedido
(
    item_pedido_id integer NOT NULL DEFAULT nextval('itempedido_item_pedido_id_seq'::regclass),
    pedido_id integer,
    produto_id integer,
    quantidade integer,
    subtotal numeric(10, 2),
    CONSTRAINT itempedido_pkey PRIMARY KEY (item_pedido_id)
);

CREATE TABLE IF NOT EXISTS public.pedido
(
    pedido_id integer NOT NULL DEFAULT nextval('pedido_pedido_id_seq'::regclass),
    cliente_id integer,
    data_pedido date,
    valor_total numeric(10, 2),
    desconto numeric(10, 2),
    CONSTRAINT pedido_pkey PRIMARY KEY (pedido_id)
);

CREATE TABLE IF NOT EXISTS public.produto
(
    produto_id integer NOT NULL DEFAULT nextval('produto_produto_id_seq'::regclass),
    nome character varying(100) COLLATE pg_catalog."default",
    descricao text COLLATE pg_catalog."default",
    preco numeric(10, 2),
    quantidade_estoque integer,
    categoria_id integer,
    armazem_id integer,
    CONSTRAINT produto_pkey PRIMARY KEY (produto_id)
);

CREATE TABLE IF NOT EXISTS public.programabeneficios
(
    beneficio_id integer NOT NULL DEFAULT nextval('programabeneficios_beneficio_id_seq'::regclass),
    cliente_id integer,
    quantidade integer,
    data_beneficio date,
    CONSTRAINT programabeneficios_pkey PRIMARY KEY (beneficio_id)
);

CREATE TABLE IF NOT EXISTS public.venda
(
    venda_id integer NOT NULL DEFAULT nextval('venda_venda_id_seq'::regclass),
    pedido_id integer,
    vendedor_id integer,
    data_venda date,
    valor_total numeric(10, 2),
    desconto numeric(10, 2),
    pontos_id integer,
    forma_pagamento_id integer,
    comissao_id integer,
    CONSTRAINT venda_pkey PRIMARY KEY (venda_id),
    CONSTRAINT venda_pedido_id_key UNIQUE (pedido_id)
);

CREATE TABLE IF NOT EXISTS public.vendedor
(
    vendedor_id integer NOT NULL DEFAULT nextval('vendedor_vendedor_id_seq'::regclass),
    nome character varying(100) COLLATE pg_catalog."default",
    cpf character varying(14) COLLATE pg_catalog."default",
    telefone character varying(20) COLLATE pg_catalog."default",
    email character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT vendedor_pkey PRIMARY KEY (vendedor_id)
);

ALTER TABLE IF EXISTS public.avaliacaoproduto
    ADD CONSTRAINT avaliacaoproduto_cliente_id_fkey FOREIGN KEY (cliente_id)
    REFERENCES public.cliente (cliente_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.avaliacaoproduto
    ADD CONSTRAINT avaliacaoproduto_produto_id_fkey FOREIGN KEY (produto_id)
    REFERENCES public.produto (produto_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.campanhaproduto
    ADD CONSTRAINT campanhaproduto_campanha_id_fkey FOREIGN KEY (campanha_id)
    REFERENCES public.campanhapromocional (campanha_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.campanhaproduto
    ADD CONSTRAINT campanhaproduto_produto_id_fkey FOREIGN KEY (produto_id)
    REFERENCES public.produto (produto_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.comissao
    ADD CONSTRAINT comissao_vendedor_id_fkey FOREIGN KEY (vendedor_id)
    REFERENCES public.vendedor (vendedor_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.itempedido
    ADD CONSTRAINT itempedido_pedido_id_fkey FOREIGN KEY (pedido_id)
    REFERENCES public.pedido (pedido_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.itempedido
    ADD CONSTRAINT itempedido_produto_id_fkey FOREIGN KEY (produto_id)
    REFERENCES public.produto (produto_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.pedido
    ADD CONSTRAINT pedido_cliente_id_fkey FOREIGN KEY (cliente_id)
    REFERENCES public.cliente (cliente_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.produto
    ADD CONSTRAINT produto_armazem_id_fkey FOREIGN KEY (armazem_id)
    REFERENCES public.armazem (armazem_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.produto
    ADD CONSTRAINT produto_categoria_id_fkey FOREIGN KEY (categoria_id)
    REFERENCES public.categoria (categoria_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.programabeneficios
    ADD CONSTRAINT programabeneficios_cliente_id_fkey FOREIGN KEY (cliente_id)
    REFERENCES public.cliente (cliente_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.venda
    ADD CONSTRAINT venda_comissao_id_fkey FOREIGN KEY (comissao_id)
    REFERENCES public.comissao (comissao_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.venda
    ADD CONSTRAINT venda_forma_pagamento_id_fkey FOREIGN KEY (forma_pagamento_id)
    REFERENCES public.formapagamento (forma_pagamento_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.venda
    ADD CONSTRAINT venda_pedido_id_fkey FOREIGN KEY (pedido_id)
    REFERENCES public.pedido (pedido_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS venda_pedido_id_key
    ON public.venda(pedido_id);


ALTER TABLE IF EXISTS public.venda
    ADD CONSTRAINT venda_pontos_id_fkey FOREIGN KEY (pontos_id)
    REFERENCES public.programabeneficios (beneficio_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.venda
    ADD CONSTRAINT venda_vendedor_id_fkey FOREIGN KEY (vendedor_id)
    REFERENCES public.vendedor (vendedor_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;